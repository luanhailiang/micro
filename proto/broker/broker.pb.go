// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: broker/broker.proto

package broker

import (
	rpcmsg "github.com/luanhailiang/micro.git/proto/rpcmsg"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 网关频道
type Topic int32

const (
	Topic_TopicServer Topic = 0 //区服聊天 index 使用gameid
	Topic_TopicPlayer Topic = 1 //玩家频道 index 使用userid
	Topic_TopicLegion Topic = 2 //军团频道 index 使用军团id
	Topic_TopicActive Topic = 3 //活动频道 index 使用活动id
	Topic_TopicNumber Topic = 4 //频道数量 直接数组减少一次哈希
)

// Enum value maps for Topic.
var (
	Topic_name = map[int32]string{
		0: "TopicServer",
		1: "TopicPlayer",
		2: "TopicLegion",
		3: "TopicActive",
		4: "TopicNumber",
	}
	Topic_value = map[string]int32{
		"TopicServer": 0,
		"TopicPlayer": 1,
		"TopicLegion": 2,
		"TopicActive": 3,
		"TopicNumber": 4,
	}
)

func (x Topic) Enum() *Topic {
	p := new(Topic)
	*p = x
	return p
}

func (x Topic) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Topic) Descriptor() protoreflect.EnumDescriptor {
	return file_broker_broker_proto_enumTypes[0].Descriptor()
}

func (Topic) Type() protoreflect.EnumType {
	return &file_broker_broker_proto_enumTypes[0]
}

func (x Topic) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Topic.Descriptor instead.
func (Topic) EnumDescriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{0}
}

type Platform int32

const (
	Platform_PlatformIOS Platform = 0
	Platform_PlatformAND Platform = 1
	Platform_PlatformMax Platform = 2
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0: "PlatformIOS",
		1: "PlatformAND",
		2: "PlatformMax",
	}
	Platform_value = map[string]int32{
		"PlatformIOS": 0,
		"PlatformAND": 1,
		"PlatformMax": 2,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_broker_broker_proto_enumTypes[1].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_broker_broker_proto_enumTypes[1]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{1}
}

type Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic Topic    `protobuf:"varint,1,opt,name=topic,proto3,enum=broker.Topic" json:"topic,omitempty"`
	Index string   `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Array []string `protobuf:"bytes,3,rep,name=array,proto3" json:"array,omitempty"`
}

func (x *Channel) Reset() {
	*x = Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{0}
}

func (x *Channel) GetTopic() Topic {
	if x != nil {
		return x.Topic
	}
	return Topic_TopicServer
}

func (x *Channel) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *Channel) GetArray() []string {
	if x != nil {
		return x.Array
	}
	return nil
}

// Call Login 当前链接登录
// jwt token 解析玩家信息，并加入频道
// jwt key放到环境变量
type CmdLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Plat  int32  `protobuf:"varint,2,opt,name=plat,proto3" json:"plat,omitempty"` //ios 0 /android 1
}

func (x *CmdLogin) Reset() {
	*x = CmdLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdLogin) ProtoMessage() {}

func (x *CmdLogin) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdLogin.ProtoReflect.Descriptor instead.
func (*CmdLogin) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{1}
}

func (x *CmdLogin) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CmdLogin) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

// Call Enter 当前链接进入频道（玩家加入公会时）
// 同一个区域只能监听一个id，会自动离开上一个频道
type CmdEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *CmdEnter) Reset() {
	*x = CmdEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdEnter) ProtoMessage() {}

func (x *CmdEnter) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdEnter.ProtoReflect.Descriptor instead.
func (*CmdEnter) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{2}
}

func (x *CmdEnter) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

// Call Leave 当前链接离开频道（玩家离开工会时）
type CmdLeave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *CmdLeave) Reset() {
	*x = CmdLeave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdLeave) ProtoMessage() {}

func (x *CmdLeave) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdLeave.ProtoReflect.Descriptor instead.
func (*CmdLeave) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{3}
}

func (x *CmdLeave) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

// Call Heart 心跳空包，活跃检查
type CmdHeart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *CmdHeart) Reset() {
	*x = CmdHeart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdHeart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdHeart) ProtoMessage() {}

func (x *CmdHeart) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdHeart.ProtoReflect.Descriptor instead.
func (*CmdHeart) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{4}
}

func (x *CmdHeart) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// Call break 客户端断线通知回调
type CmdBreak struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` //推出类型(0:正常，1:重复，2:防沉迷，3:GM)
}

func (x *CmdBreak) Reset() {
	*x = CmdBreak{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdBreak) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdBreak) ProtoMessage() {}

func (x *CmdBreak) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdBreak.ProtoReflect.Descriptor instead.
func (*CmdBreak) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{5}
}

func (x *CmdBreak) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// Sub Broad 所有网关监听并广播
type SubBroad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel *Channel            `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Back    *rpcmsg.BackMessage `protobuf:"bytes,2,opt,name=back,proto3" json:"back,omitempty"`
}

func (x *SubBroad) Reset() {
	*x = SubBroad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_broker_broker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubBroad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubBroad) ProtoMessage() {}

func (x *SubBroad) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubBroad.ProtoReflect.Descriptor instead.
func (*SubBroad) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{6}
}

func (x *SubBroad) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *SubBroad) GetBack() *rpcmsg.BackMessage {
	if x != nil {
		return x.Back
	}
	return nil
}

var File_broker_broker_proto protoreflect.FileDescriptor

var file_broker_broker_proto_rawDesc = []byte{
	0x0a, 0x13, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x1a, 0x14, 0x72,
	0x70, 0x63, 0x6d, 0x73, 0x67, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x22,
	0x34, 0x0a, 0x08, 0x43, 0x6d, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6c, 0x61, 0x74, 0x22, 0x35, 0x0a, 0x08, 0x43, 0x6d, 0x64, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x35, 0x0a, 0x08,
	0x43, 0x6d, 0x64, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x22, 0x1e, 0x0a, 0x08, 0x43, 0x6d, 0x64, 0x48, 0x65, 0x61, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x08, 0x43, 0x6d, 0x64, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x12,
	0x29, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x61,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x63, 0x6b, 0x2a, 0x5c, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4c, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x10,
	0x04, 0x2a, 0x3d, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x4f, 0x53, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x78, 0x10, 0x02,
	0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c,
	0x75, 0x61, 0x6e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x67, 0x2f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x67, 0x69, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_broker_broker_proto_rawDescOnce sync.Once
	file_broker_broker_proto_rawDescData = file_broker_broker_proto_rawDesc
)

func file_broker_broker_proto_rawDescGZIP() []byte {
	file_broker_broker_proto_rawDescOnce.Do(func() {
		file_broker_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_broker_broker_proto_rawDescData)
	})
	return file_broker_broker_proto_rawDescData
}

var file_broker_broker_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_broker_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_broker_broker_proto_goTypes = []interface{}{
	(Topic)(0),                 // 0: broker.Topic
	(Platform)(0),              // 1: broker.Platform
	(*Channel)(nil),            // 2: broker.Channel
	(*CmdLogin)(nil),           // 3: broker.CmdLogin
	(*CmdEnter)(nil),           // 4: broker.CmdEnter
	(*CmdLeave)(nil),           // 5: broker.CmdLeave
	(*CmdHeart)(nil),           // 6: broker.CmdHeart
	(*CmdBreak)(nil),           // 7: broker.CmdBreak
	(*SubBroad)(nil),           // 8: broker.SubBroad
	(*rpcmsg.BackMessage)(nil), // 9: rpcmsg.BackMessage
}
var file_broker_broker_proto_depIdxs = []int32{
	0, // 0: broker.Channel.topic:type_name -> broker.Topic
	2, // 1: broker.CmdEnter.channel:type_name -> broker.Channel
	2, // 2: broker.CmdLeave.channel:type_name -> broker.Channel
	2, // 3: broker.SubBroad.channel:type_name -> broker.Channel
	9, // 4: broker.SubBroad.back:type_name -> rpcmsg.BackMessage
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_broker_broker_proto_init() }
func file_broker_broker_proto_init() {
	if File_broker_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_broker_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdLeave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdHeart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdBreak); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_broker_broker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubBroad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_broker_broker_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_broker_broker_proto_goTypes,
		DependencyIndexes: file_broker_broker_proto_depIdxs,
		EnumInfos:         file_broker_broker_proto_enumTypes,
		MessageInfos:      file_broker_broker_proto_msgTypes,
	}.Build()
	File_broker_broker_proto = out.File
	file_broker_broker_proto_rawDesc = nil
	file_broker_broker_proto_goTypes = nil
	file_broker_broker_proto_depIdxs = nil
}
