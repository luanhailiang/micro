// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: rpcmsg/package.proto

package rpcmsg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//元数据，访问者信息，分库分表依据，
type MateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space string `protobuf:"bytes,1,opt,name=space,proto3" json:"space,omitempty"`  //游戏分区 数据库按此分表,广播按此分区（减轻锁等待问题）
	Index string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`  //玩家索引 需全局唯一（和服）[space:player]
	Usrid string `protobuf:"bytes,3,opt,name=usrid,proto3" json:"usrid,omitempty"`  //账号id
	Sdkid string `protobuf:"bytes,4,opt,name=sdkid,proto3" json:"sdkid,omitempty"`  //平台id
	Suuid string `protobuf:"bytes,5,opt,name=suuid,proto3" json:"suuid,omitempty"`  //平台账号id
	Admin string `protobuf:"bytes,6,opt,name=admin,proto3" json:"admin,omitempty"`  //权限
	Count uint64 `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"` //用户计数
	Clnip string `protobuf:"bytes,8,opt,name=clnip,proto3" json:"clnip,omitempty"`  //客户段ip
}

func (x *MateMessage) Reset() {
	*x = MateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcmsg_package_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MateMessage) ProtoMessage() {}

func (x *MateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rpcmsg_package_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MateMessage.ProtoReflect.Descriptor instead.
func (*MateMessage) Descriptor() ([]byte, []int) {
	return file_rpcmsg_package_proto_rawDescGZIP(), []int{0}
}

func (x *MateMessage) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *MateMessage) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *MateMessage) GetUsrid() string {
	if x != nil {
		return x.Usrid
	}
	return ""
}

func (x *MateMessage) GetSdkid() string {
	if x != nil {
		return x.Sdkid
	}
	return ""
}

func (x *MateMessage) GetSuuid() string {
	if x != nil {
		return x.Suuid
	}
	return ""
}

func (x *MateMessage) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *MateMessage) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MateMessage) GetClnip() string {
	if x != nil {
		return x.Clnip
	}
	return ""
}

//消息压缩数据，如果不想proto编译文件，可以json直接请求，支持http
type BuffMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Json bool   `protobuf:"varint,3,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *BuffMessage) Reset() {
	*x = BuffMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcmsg_package_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuffMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuffMessage) ProtoMessage() {}

func (x *BuffMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rpcmsg_package_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuffMessage.ProtoReflect.Descriptor instead.
func (*BuffMessage) Descriptor() ([]byte, []int) {
	return file_rpcmsg_package_proto_rawDescGZIP(), []int{1}
}

func (x *BuffMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuffMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BuffMessage) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

//进程间消息传送，grpc，nats
type CallMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mate *MateMessage `protobuf:"bytes,1,opt,name=mate,proto3" json:"mate,omitempty"`
	Buff *BuffMessage `protobuf:"bytes,2,opt,name=buff,proto3" json:"buff,omitempty"`
}

func (x *CallMessage) Reset() {
	*x = CallMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcmsg_package_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallMessage) ProtoMessage() {}

func (x *CallMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rpcmsg_package_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallMessage.ProtoReflect.Descriptor instead.
func (*CallMessage) Descriptor() ([]byte, []int) {
	return file_rpcmsg_package_proto_rawDescGZIP(), []int{2}
}

func (x *CallMessage) GetMate() *MateMessage {
	if x != nil {
		return x.Mate
	}
	return nil
}

func (x *CallMessage) GetBuff() *BuffMessage {
	if x != nil {
		return x.Buff
	}
	return nil
}

//进程间消息返回，grpc
type BackMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Info string       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Buff *BuffMessage `protobuf:"bytes,3,opt,name=buff,proto3" json:"buff,omitempty"`
}

func (x *BackMessage) Reset() {
	*x = BackMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcmsg_package_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackMessage) ProtoMessage() {}

func (x *BackMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rpcmsg_package_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackMessage.ProtoReflect.Descriptor instead.
func (*BackMessage) Descriptor() ([]byte, []int) {
	return file_rpcmsg_package_proto_rawDescGZIP(), []int{3}
}

func (x *BackMessage) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BackMessage) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *BackMessage) GetBuff() *BuffMessage {
	if x != nil {
		return x.Buff
	}
	return nil
}

var File_rpcmsg_package_proto protoreflect.FileDescriptor

var file_rpcmsg_package_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x22, 0xbd,
	0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73,
	0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x72, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x64, 0x6b, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x64, 0x6b, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6e, 0x69,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6e, 0x69, 0x70, 0x22, 0x49,
	0x0a, 0x0b, 0x42, 0x75, 0x66, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x0b, 0x43, 0x61, 0x6c,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e,
	0x4d, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6d, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x62, 0x75, 0x66, 0x66, 0x22, 0x5e, 0x0a, 0x0b, 0x42, 0x61,
	0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x75, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x62, 0x75, 0x66, 0x66, 0x32, 0x3d, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x13, 0x2e,
	0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x63, 0x6b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x32, 0x75, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x13, 0x2e, 0x72,
	0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x6d, 0x73, 0x67, 0x2e, 0x42,
	0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x52, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61, 0x6e, 0x67, 0x6c, 0x61, 0x6e, 0x67,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x06, 0x52, 0x70,
	0x63, 0x4d, 0x73, 0x67, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x75, 0x61, 0x6e, 0x68, 0x61, 0x69, 0x6c, 0x69, 0x61, 0x6e, 0x67, 0x2f, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x67, 0x69, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x70,
	0x63, 0x6d, 0x73, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpcmsg_package_proto_rawDescOnce sync.Once
	file_rpcmsg_package_proto_rawDescData = file_rpcmsg_package_proto_rawDesc
)

func file_rpcmsg_package_proto_rawDescGZIP() []byte {
	file_rpcmsg_package_proto_rawDescOnce.Do(func() {
		file_rpcmsg_package_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpcmsg_package_proto_rawDescData)
	})
	return file_rpcmsg_package_proto_rawDescData
}

var file_rpcmsg_package_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpcmsg_package_proto_goTypes = []interface{}{
	(*MateMessage)(nil), // 0: rpcmsg.MateMessage
	(*BuffMessage)(nil), // 1: rpcmsg.BuffMessage
	(*CallMessage)(nil), // 2: rpcmsg.CallMessage
	(*BackMessage)(nil), // 3: rpcmsg.BackMessage
}
var file_rpcmsg_package_proto_depIdxs = []int32{
	0, // 0: rpcmsg.CallMessage.mate:type_name -> rpcmsg.MateMessage
	1, // 1: rpcmsg.CallMessage.buff:type_name -> rpcmsg.BuffMessage
	1, // 2: rpcmsg.BackMessage.buff:type_name -> rpcmsg.BuffMessage
	2, // 3: rpcmsg.Command.Call:input_type -> rpcmsg.CallMessage
	1, // 4: rpcmsg.Connect.Exec:input_type -> rpcmsg.BuffMessage
	1, // 5: rpcmsg.Connect.Link:input_type -> rpcmsg.BuffMessage
	3, // 6: rpcmsg.Command.Call:output_type -> rpcmsg.BackMessage
	3, // 7: rpcmsg.Connect.Exec:output_type -> rpcmsg.BackMessage
	3, // 8: rpcmsg.Connect.Link:output_type -> rpcmsg.BackMessage
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_rpcmsg_package_proto_init() }
func file_rpcmsg_package_proto_init() {
	if File_rpcmsg_package_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpcmsg_package_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcmsg_package_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuffMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcmsg_package_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcmsg_package_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpcmsg_package_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_rpcmsg_package_proto_goTypes,
		DependencyIndexes: file_rpcmsg_package_proto_depIdxs,
		MessageInfos:      file_rpcmsg_package_proto_msgTypes,
	}.Build()
	File_rpcmsg_package_proto = out.File
	file_rpcmsg_package_proto_rawDesc = nil
	file_rpcmsg_package_proto_goTypes = nil
	file_rpcmsg_package_proto_depIdxs = nil
}
