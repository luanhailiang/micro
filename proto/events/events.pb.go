// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: events/events.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 服务器状态同步，每分钟
type ServerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Zone int32  `protobuf:"varint,2,opt,name=zone,proto3" json:"zone,omitempty"` //区服id
	Addr string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`  //服务器ip
}

func (x *ServerState) Reset() {
	*x = ServerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerState) ProtoMessage() {}

func (x *ServerState) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerState.ProtoReflect.Descriptor instead.
func (*ServerState) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{0}
}

func (x *ServerState) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ServerState) GetZone() int32 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *ServerState) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

// 服务器在线同步，每分钟
type OnlineCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Game string `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`  //游戏id
	Zone int32  `protobuf:"varint,3,opt,name=zone,proto3" json:"zone,omitempty"` //区服id
	Area string `protobuf:"bytes,4,opt,name=area,proto3" json:"area,omitempty"`  //国家地区
	Ios  int32  `protobuf:"varint,5,opt,name=ios,proto3" json:"ios,omitempty"`   //ios在线人数
	And  int32  `protobuf:"varint,6,opt,name=and,proto3" json:"and,omitempty"`   //and在线人数
}

func (x *OnlineCount) Reset() {
	*x = OnlineCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineCount) ProtoMessage() {}

func (x *OnlineCount) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineCount.ProtoReflect.Descriptor instead.
func (*OnlineCount) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{1}
}

func (x *OnlineCount) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *OnlineCount) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *OnlineCount) GetZone() int32 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *OnlineCount) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *OnlineCount) GetIos() int32 {
	if x != nil {
		return x.Ios
	}
	return 0
}

func (x *OnlineCount) GetAnd() int32 {
	if x != nil {
		return x.And
	}
	return 0
}

// 注册事件
type SignUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Zone string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`  //区服id
	Addr string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`  //ip地址
	Plat int32  `protobuf:"varint,5,opt,name=plat,proto3" json:"plat,omitempty"` //ios 0 /android 1
}

func (x *SignUp) Reset() {
	*x = SignUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUp) ProtoMessage() {}

func (x *SignUp) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUp.ProtoReflect.Descriptor instead.
func (*SignUp) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{2}
}

func (x *SignUp) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SignUp) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SignUp) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *SignUp) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SignUp) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

// 登陆事件
type SignIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Zone string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`  //区服id
	Addr string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`  //ip地址
	Plat int32  `protobuf:"varint,5,opt,name=plat,proto3" json:"plat,omitempty"` //ios 0 /android 1
}

func (x *SignIn) Reset() {
	*x = SignIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignIn) ProtoMessage() {}

func (x *SignIn) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignIn.ProtoReflect.Descriptor instead.
func (*SignIn) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{3}
}

func (x *SignIn) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SignIn) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SignIn) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *SignIn) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SignIn) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

// 登陆事件
type Heart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Zone string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`  //区服id
	Addr string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`  //ip地址
	Plat int32  `protobuf:"varint,5,opt,name=plat,proto3" json:"plat,omitempty"` //ios 0 /android 1
	Last int64  `protobuf:"varint,6,opt,name=last,proto3" json:"last,omitempty"` //已经在线时长
}

func (x *Heart) Reset() {
	*x = Heart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Heart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heart) ProtoMessage() {}

func (x *Heart) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heart.ProtoReflect.Descriptor instead.
func (*Heart) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{4}
}

func (x *Heart) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Heart) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Heart) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Heart) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Heart) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

func (x *Heart) GetLast() int64 {
	if x != nil {
		return x.Last
	}
	return 0
}

// 超时事件
type Beyond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Zone string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`  //区服id
	Addr string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`  //ip地址
	Plat int32  `protobuf:"varint,5,opt,name=plat,proto3" json:"plat,omitempty"` //ios 0 /android 1
	Last int64  `protobuf:"varint,6,opt,name=last,proto3" json:"last,omitempty"` //已经在线时长
}

func (x *Beyond) Reset() {
	*x = Beyond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Beyond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Beyond) ProtoMessage() {}

func (x *Beyond) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Beyond.ProtoReflect.Descriptor instead.
func (*Beyond) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{5}
}

func (x *Beyond) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Beyond) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Beyond) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Beyond) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Beyond) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

func (x *Beyond) GetLast() int64 {
	if x != nil {
		return x.Last
	}
	return 0
}

// 登陆事件
type Logout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Zone string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`  //区服id
	Addr string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`  //ip地址
	Plat int32  `protobuf:"varint,5,opt,name=plat,proto3" json:"plat,omitempty"` //ios 0 /android 1
	Last int64  `protobuf:"varint,6,opt,name=last,proto3" json:"last,omitempty"` //在线时长
	Type int32  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"` //推出类型(0:正常，1:重复，2:防沉迷，3:GM)
}

func (x *Logout) Reset() {
	*x = Logout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logout) ProtoMessage() {}

func (x *Logout) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logout.ProtoReflect.Descriptor instead.
func (*Logout) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{6}
}

func (x *Logout) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Logout) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Logout) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Logout) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Logout) GetPlat() int32 {
	if x != nil {
		return x.Plat
	}
	return 0
}

func (x *Logout) GetLast() int64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *Logout) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 货币流水
type MoneyFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Coin int32  `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"` //货币类型
	Num  int64  `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`   //变化数量
	Now  int64  `protobuf:"varint,5,opt,name=now,proto3" json:"now,omitempty"`   //当前数量
	Why1 int32  `protobuf:"varint,6,opt,name=why1,proto3" json:"why1,omitempty"` //一级原因
	Why2 int32  `protobuf:"varint,7,opt,name=why2,proto3" json:"why2,omitempty"` //二级原因
}

func (x *MoneyFlow) Reset() {
	*x = MoneyFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoneyFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyFlow) ProtoMessage() {}

func (x *MoneyFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyFlow.ProtoReflect.Descriptor instead.
func (*MoneyFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{7}
}

func (x *MoneyFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MoneyFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *MoneyFlow) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *MoneyFlow) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MoneyFlow) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

func (x *MoneyFlow) GetWhy1() int32 {
	if x != nil {
		return x.Why1
	}
	return 0
}

func (x *MoneyFlow) GetWhy2() int32 {
	if x != nil {
		return x.Why2
	}
	return 0
}

// 物品流水
type ItemFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`  //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`   //玩家id
	Type int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`  //道具类型
	Item int32  `protobuf:"varint,4,opt,name=item,proto3" json:"item,omitempty"`  //道具id
	Num  int64  `protobuf:"varint,5,opt,name=num,proto3" json:"num,omitempty"`    //变化数量
	Now  int64  `protobuf:"varint,6,opt,name=now,proto3" json:"now,omitempty"`    //当前数量
	Why1 int32  `protobuf:"varint,7,opt,name=why1,proto3" json:"why1,omitempty"`  //一级原因
	Why2 int32  `protobuf:"varint,8,opt,name=why2,proto3" json:"why2,omitempty"`  //二级原因
	Coin int32  `protobuf:"varint,9,opt,name=coin,proto3" json:"coin,omitempty"`  //消耗货币
	Cost int64  `protobuf:"varint,10,opt,name=cost,proto3" json:"cost,omitempty"` //小号数量
}

func (x *ItemFlow) Reset() {
	*x = ItemFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemFlow) ProtoMessage() {}

func (x *ItemFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemFlow.ProtoReflect.Descriptor instead.
func (*ItemFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{8}
}

func (x *ItemFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ItemFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ItemFlow) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ItemFlow) GetItem() int32 {
	if x != nil {
		return x.Item
	}
	return 0
}

func (x *ItemFlow) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ItemFlow) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

func (x *ItemFlow) GetWhy1() int32 {
	if x != nil {
		return x.Why1
	}
	return 0
}

func (x *ItemFlow) GetWhy2() int32 {
	if x != nil {
		return x.Why2
	}
	return 0
}

func (x *ItemFlow) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *ItemFlow) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

// 经验流水
type ExpFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`                //事件时间
	Role  string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`                 //玩家id
	Num   int64  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`                  //变化数量
	Last  int32  `protobuf:"varint,4,opt,name=last,proto3" json:"last,omitempty"`                //所用时长
	PreLv int32  `protobuf:"varint,5,opt,name=pre_lv,json=preLv,proto3" json:"pre_lv,omitempty"` //之前级别
	NowLv int32  `protobuf:"varint,6,opt,name=now_lv,json=nowLv,proto3" json:"now_lv,omitempty"` //当前级别
	Why1  int32  `protobuf:"varint,8,opt,name=why1,proto3" json:"why1,omitempty"`                //一级原因
	Why2  int32  `protobuf:"varint,9,opt,name=why2,proto3" json:"why2,omitempty"`                //二级原因
}

func (x *ExpFlow) Reset() {
	*x = ExpFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpFlow) ProtoMessage() {}

func (x *ExpFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpFlow.ProtoReflect.Descriptor instead.
func (*ExpFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{9}
}

func (x *ExpFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ExpFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ExpFlow) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ExpFlow) GetLast() int32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *ExpFlow) GetPreLv() int32 {
	if x != nil {
		return x.PreLv
	}
	return 0
}

func (x *ExpFlow) GetNowLv() int32 {
	if x != nil {
		return x.NowLv
	}
	return 0
}

func (x *ExpFlow) GetWhy1() int32 {
	if x != nil {
		return x.Why1
	}
	return 0
}

func (x *ExpFlow) GetWhy2() int32 {
	if x != nil {
		return x.Why2
	}
	return 0
}

// 升级流水
type LevelFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`                //事件时间
	Role  string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`                 //玩家id
	Last  int32  `protobuf:"varint,3,opt,name=last,proto3" json:"last,omitempty"`                //所用时长
	PreLv int32  `protobuf:"varint,4,opt,name=pre_lv,json=preLv,proto3" json:"pre_lv,omitempty"` //之前级别
	NowLv int32  `protobuf:"varint,5,opt,name=now_lv,json=nowLv,proto3" json:"now_lv,omitempty"` //当前级别
	Why1  int32  `protobuf:"varint,6,opt,name=why1,proto3" json:"why1,omitempty"`                //一级原因
	Why2  int32  `protobuf:"varint,7,opt,name=why2,proto3" json:"why2,omitempty"`                //二级原因
}

func (x *LevelFlow) Reset() {
	*x = LevelFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelFlow) ProtoMessage() {}

func (x *LevelFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelFlow.ProtoReflect.Descriptor instead.
func (*LevelFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{10}
}

func (x *LevelFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *LevelFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *LevelFlow) GetLast() int32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *LevelFlow) GetPreLv() int32 {
	if x != nil {
		return x.PreLv
	}
	return 0
}

func (x *LevelFlow) GetNowLv() int32 {
	if x != nil {
		return x.NowLv
	}
	return 0
}

func (x *LevelFlow) GetWhy1() int32 {
	if x != nil {
		return x.Why1
	}
	return 0
}

func (x *LevelFlow) GetWhy2() int32 {
	if x != nil {
		return x.Why2
	}
	return 0
}

// 副本开启流水
type RoundBgnFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Type int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` //副本类型 1:经验副本,2:爬塔,3:世界BOSS,4:公会战
	Copy int32  `protobuf:"varint,4,opt,name=copy,proto3" json:"copy,omitempty"` //副本关卡id
	Team int32  `protobuf:"varint,5,opt,name=team,proto3" json:"team,omitempty"` //队伍id
	Tnum int32  `protobuf:"varint,6,opt,name=tnum,proto3" json:"tnum,omitempty"` //队伍人数
}

func (x *RoundBgnFlow) Reset() {
	*x = RoundBgnFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundBgnFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundBgnFlow) ProtoMessage() {}

func (x *RoundBgnFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundBgnFlow.ProtoReflect.Descriptor instead.
func (*RoundBgnFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{11}
}

func (x *RoundBgnFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RoundBgnFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RoundBgnFlow) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RoundBgnFlow) GetCopy() int32 {
	if x != nil {
		return x.Copy
	}
	return 0
}

func (x *RoundBgnFlow) GetTeam() int32 {
	if x != nil {
		return x.Team
	}
	return 0
}

func (x *RoundBgnFlow) GetTnum() int32 {
	if x != nil {
		return x.Tnum
	}
	return 0
}

// 副本结束流水
type RoundEndFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Type int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"` //副本类型 1:经验副本,2:爬塔,3:世界BOSS,4:公会战
	Copy int32  `protobuf:"varint,4,opt,name=copy,proto3" json:"copy,omitempty"` //副本关卡id
	Last int32  `protobuf:"varint,5,opt,name=last,proto3" json:"last,omitempty"` //持续时长
	Ret  int32  `protobuf:"varint,6,opt,name=ret,proto3" json:"ret,omitempty"`   //结果 0:失败,1:成功
	Rank int32  `protobuf:"varint,7,opt,name=rank,proto3" json:"rank,omitempty"` //排名
}

func (x *RoundEndFlow) Reset() {
	*x = RoundEndFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundEndFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundEndFlow) ProtoMessage() {}

func (x *RoundEndFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundEndFlow.ProtoReflect.Descriptor instead.
func (*RoundEndFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{12}
}

func (x *RoundEndFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RoundEndFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RoundEndFlow) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RoundEndFlow) GetCopy() int32 {
	if x != nil {
		return x.Copy
	}
	return 0
}

func (x *RoundEndFlow) GetLast() int32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *RoundEndFlow) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *RoundEndFlow) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// 新手引导流水
type GuideFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"` //事件时间
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`  //玩家id
	Node int32  `protobuf:"varint,3,opt,name=node,proto3" json:"node,omitempty"` //节点id
	Skip int32  `protobuf:"varint,4,opt,name=skip,proto3" json:"skip,omitempty"` //是否可跳过(0-不可跳过；1-可跳过；)
}

func (x *GuideFlow) Reset() {
	*x = GuideFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GuideFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuideFlow) ProtoMessage() {}

func (x *GuideFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuideFlow.ProtoReflect.Descriptor instead.
func (*GuideFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{13}
}

func (x *GuideFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GuideFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GuideFlow) GetNode() int32 {
	if x != nil {
		return x.Node
	}
	return 0
}

func (x *GuideFlow) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

// vip升级流水
type VipLvFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`                //事件时间
	Role  string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`                 //玩家id
	Last  int32  `protobuf:"varint,3,opt,name=last,proto3" json:"last,omitempty"`                //所用时长
	PreLv int32  `protobuf:"varint,4,opt,name=pre_lv,json=preLv,proto3" json:"pre_lv,omitempty"` //之前级别
	NowLv int32  `protobuf:"varint,5,opt,name=now_lv,json=nowLv,proto3" json:"now_lv,omitempty"` //当前级别
	Why1  int32  `protobuf:"varint,6,opt,name=why1,proto3" json:"why1,omitempty"`                //一级原因
	Why2  int32  `protobuf:"varint,7,opt,name=why2,proto3" json:"why2,omitempty"`                //二级原因
}

func (x *VipLvFlow) Reset() {
	*x = VipLvFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLvFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLvFlow) ProtoMessage() {}

func (x *VipLvFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLvFlow.ProtoReflect.Descriptor instead.
func (*VipLvFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{14}
}

func (x *VipLvFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *VipLvFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *VipLvFlow) GetLast() int32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *VipLvFlow) GetPreLv() int32 {
	if x != nil {
		return x.PreLv
	}
	return 0
}

func (x *VipLvFlow) GetNowLv() int32 {
	if x != nil {
		return x.NowLv
	}
	return 0
}

func (x *VipLvFlow) GetWhy1() int32 {
	if x != nil {
		return x.Why1
	}
	return 0
}

func (x *VipLvFlow) GetWhy2() int32 {
	if x != nil {
		return x.Why2
	}
	return 0
}

// 聊天流水
type ChatFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time      int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`          //事件时间
	Role      string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`           //玩家id
	Zone      string `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`           //区服id
	ChatTab   string `protobuf:"bytes,4,opt,name=chatTab,proto3" json:"chatTab,omitempty"`     //频道类型
	ChatTabId string `protobuf:"bytes,5,opt,name=chatTabId,proto3" json:"chatTabId,omitempty"` //频道id
	Content   string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`     //聊天内容
}

func (x *ChatFlow) Reset() {
	*x = ChatFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_events_events_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatFlow) ProtoMessage() {}

func (x *ChatFlow) ProtoReflect() protoreflect.Message {
	mi := &file_events_events_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatFlow.ProtoReflect.Descriptor instead.
func (*ChatFlow) Descriptor() ([]byte, []int) {
	return file_events_events_proto_rawDescGZIP(), []int{15}
}

func (x *ChatFlow) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ChatFlow) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatFlow) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ChatFlow) GetChatTab() string {
	if x != nil {
		return x.ChatTab
	}
	return ""
}

func (x *ChatFlow) GetChatTabId() string {
	if x != nil {
		return x.ChatTabId
	}
	return ""
}

func (x *ChatFlow) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_events_events_proto protoreflect.FileDescriptor

var file_events_events_proto_rawDesc = []byte{
	0x0a, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x49, 0x0a,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x6f, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6e,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x6e, 0x64, 0x22, 0x6c, 0x0a, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x22, 0x6c, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x22, 0x7f, 0x0a, 0x05, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x06, 0x42, 0x65,
	0x79, 0x6f, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a,
	0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x46, 0x6c, 0x6f,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x6f,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x77, 0x68, 0x79, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x32, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x68, 0x79, 0x32, 0x22, 0xce, 0x01, 0x0a, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68,
	0x79, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x68, 0x79, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x68, 0x79, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x68,
	0x79, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x07, 0x45,
	0x78, 0x70, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6c, 0x61, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x5f, 0x6c, 0x76, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x65, 0x4c, 0x76, 0x12, 0x15, 0x0a, 0x06, 0x6e,
	0x6f, 0x77, 0x5f, 0x6c, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x6f, 0x77,
	0x4c, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x77, 0x68, 0x79, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x32, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x68, 0x79, 0x32, 0x22, 0x9d, 0x01, 0x0a, 0x09, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6c, 0x61, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x5f, 0x6c, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x65, 0x4c, 0x76, 0x12, 0x15, 0x0a, 0x06, 0x6e,
	0x6f, 0x77, 0x5f, 0x6c, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x6f, 0x77,
	0x4c, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x77, 0x68, 0x79, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x32, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x68, 0x79, 0x32, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x42, 0x67, 0x6e, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x6e, 0x75, 0x6d, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64,
	0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x70, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x70, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x5b,
	0x0a, 0x09, 0x47, 0x75, 0x69, 0x64, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x9d, 0x01, 0x0a, 0x09,
	0x56, 0x69, 0x70, 0x4c, 0x76, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x5f, 0x6c, 0x76, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x65, 0x4c, 0x76, 0x12, 0x15, 0x0a, 0x06,
	0x6e, 0x6f, 0x77, 0x5f, 0x6c, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x6f,
	0x77, 0x4c, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x77, 0x68, 0x79, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x68, 0x79, 0x32, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x77, 0x68, 0x79, 0x32, 0x22, 0x98, 0x01, 0x0a, 0x08,
	0x43, 0x68, 0x61, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x62, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x62, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x54, 0x61, 0x62, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x61,
	0x6e, 0x67, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x75, 0x61, 0x6e, 0x68, 0x61, 0x69, 0x6c, 0x69,
	0x61, 0x6e, 0x67, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x67, 0x69, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0xaa, 0x02, 0x0c, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_events_events_proto_rawDescOnce sync.Once
	file_events_events_proto_rawDescData = file_events_events_proto_rawDesc
)

func file_events_events_proto_rawDescGZIP() []byte {
	file_events_events_proto_rawDescOnce.Do(func() {
		file_events_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_events_events_proto_rawDescData)
	})
	return file_events_events_proto_rawDescData
}

var file_events_events_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_events_events_proto_goTypes = []interface{}{
	(*ServerState)(nil),  // 0: events.ServerState
	(*OnlineCount)(nil),  // 1: events.OnlineCount
	(*SignUp)(nil),       // 2: events.SignUp
	(*SignIn)(nil),       // 3: events.SignIn
	(*Heart)(nil),        // 4: events.Heart
	(*Beyond)(nil),       // 5: events.Beyond
	(*Logout)(nil),       // 6: events.Logout
	(*MoneyFlow)(nil),    // 7: events.MoneyFlow
	(*ItemFlow)(nil),     // 8: events.ItemFlow
	(*ExpFlow)(nil),      // 9: events.ExpFlow
	(*LevelFlow)(nil),    // 10: events.LevelFlow
	(*RoundBgnFlow)(nil), // 11: events.RoundBgnFlow
	(*RoundEndFlow)(nil), // 12: events.RoundEndFlow
	(*GuideFlow)(nil),    // 13: events.GuideFlow
	(*VipLvFlow)(nil),    // 14: events.VipLvFlow
	(*ChatFlow)(nil),     // 15: events.ChatFlow
}
var file_events_events_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_events_events_proto_init() }
func file_events_events_proto_init() {
	if File_events_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_events_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Heart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Beyond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoneyFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundBgnFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundEndFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GuideFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLvFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_events_events_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_events_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_events_events_proto_goTypes,
		DependencyIndexes: file_events_events_proto_depIdxs,
		MessageInfos:      file_events_events_proto_msgTypes,
	}.Build()
	File_events_events_proto = out.File
	file_events_events_proto_rawDesc = nil
	file_events_events_proto_goTypes = nil
	file_events_events_proto_depIdxs = nil
}
